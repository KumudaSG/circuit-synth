name: Build Rust Wheels

on:
  push:
    tags: ["v*"]
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build-wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Install maturin
      run: pip install maturin

    - name: Build KiCad writer wheel
      working-directory: rust_modules/rust_kicad_integration
      run: maturin build --release --strip --out ../../dist

    - name: Build symbol cache wheel  
      working-directory: rust_modules/rust_symbol_cache
      run: maturin build --release --strip --out ../../dist

    - name: Build placement wheel
      working-directory: rust_modules/rust_force_directed_placement  
      run: maturin build --release --strip --out ../../dist

    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels-${{ matrix.os }}
        path: dist/*.whl

  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: build-wheels
    if: github.event_name == 'release' && github.event.action == 'published'
    
    steps:
    - name: Download wheels
      uses: actions/download-artifact@v3
      with:
        path: dist/
        
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        packages_dir: dist/*/